#
# Yet Another UserAgent Analyzer
# Copyright (C) 2013-2020 Niels Basjes
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

apiVersion: v1
kind: Namespace
metadata:
  name: yauaa

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: yauaa
  namespace: yauaa
spec:
  selector:
    matchLabels:
      app: yauaa
  replicas: 3
  template:
    metadata:
      labels:
        app: yauaa
    spec:
      containers:
      - name: yauaa
        image: nielsbasjes/yauaa:latest
        ports:
        - containerPort: 8080
          name: yauaa
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /running
            port: yauaa
          initialDelaySeconds: 2
          periodSeconds: 3
        livenessProbe:
          httpGet:
            path: /running
            port: yauaa
          initialDelaySeconds: 10
          periodSeconds: 10

---

apiVersion: v1
kind: Service
metadata:
  name: yauaa
  namespace: yauaa
spec:
  selector:
    app: yauaa
  ports:
    - name: default
      protocol: TCP
      port: 80
      targetPort: 8080
  type: ClusterIP

---

#apiVersion: extensions/v1beta1
#kind: Ingress
#metadata:
#  name: yauaa
#  namespace: yauaa
#  annotations:
#    kubernetes.io/ingress.class: nginx
#    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
#spec:
#  rules:
#    - host: yauaa.example.nl
#      http:
#        paths:
#          - backend:
#              serviceName: yauaa
#              servicePort: 80
#            path: /
#  tls:
#    - hosts:
#        - yauaa.example.nl
#      secretName: kluster-cert
# Create this secret with a command similar to this:
# kubectl -n yauaa create secret tls kluster-cert --key=certs/privkey.pem --cert=certs/fullchain.pem
